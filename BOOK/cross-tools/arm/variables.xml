<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
   <!ENTITY % general-entities SYSTEM "../../general.ent">
   %general-entities;
]>

<sect1 id="ch-cross-tools-variables">
  <?dbhtml filename="variables.html"?>

  <title>Build Variables</title>

  <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
  href="../common/variables.xml"
  xpointer="xpointer(//*[@role='host'])"/>

 <sect2 role="endianess">
<title> Set Endianess </title>

<para> The Endianess of system refers to how numbers are represented. See the following 
wiki entry for additional details:

    <ulink url="http://en.wikipedia.org/wiki/Endianness"/>
    
    
    
Based on the selected platform the following setting is appropriate:    
</para>

<screen os="d"><userinput>
export CLFS_ENDIAN=&clfs_endian;
echo export CLFS_ENDIAN=\""${CLFS_ENDIAN}\"" &gt;&gt; ~/.bashrc
</userinput></screen>
</sect2>


<sect2 role="armVariables">
<title> Architecture Specific Variables </title>

<para>  The ARM architecture supports 16 bity instruction reffered to as THUMB,see the following wiki entry for
additional information:

<ulink url="http://en.wikipedia.org/wiki/ARM_architecture#Thumb"/>


If we review the configuration file created earlier under the section "Processor Features" we see that the following config flag has been set

    CONFIG_ARM_THUMB=y

thus we set the arm mode to thumb to enable a 16 bit instruction set or use the generally applicable arm mode. </para>

<screen os="f"><userinput>
export CLFS_ARM_MODE=&clfs_arm_mode;
echo export CLFS_ARM_MODE=\""${CLFS_ARM_MODE}\"" &gt;&gt; ~/.bashrc
</userinput></screen>    





<para> There are a number of arm architectures (see table below).If we review the configuration file created earlier 
under the section "Processor type" we see that the following config flag has been set

    CONFIG_CPU_32v5=y

thus we set the arm architecture as follows: </para>

<screen os="f"><userinput>
export CLFS_ARM_ARCH=&clfs_arm_arch;
echo export CLFS_ARM_ARCH=\""${CLFS_ARM_ARCH}\"" &gt;&gt; ~/.bashrc
</userinput></screen>



  

  <para os="f1">If your target CPU has hard floating point support (not all ARM
  CPUs do), set the following CLFS_FLOAT variable to either "hard" or "softfp".
  If your target CPU does not have hard floating point support, set the following
  CLFS_FLOAT variable to "soft".</para>

<screen os="f2"><userinput>
export CLFS_FLOAT=&clfs_float;
echo export CLFS_FLOAT=\""${CLFS_FLOAT}\"" &gt;&gt; ~/.bashrc
</userinput></screen>    


 
  <table os="j">
    <title>ARM Archiecture Choices</title>
    <?dbfo table-width="4in" ?>

    <tgroup cols="2">

      <colspec colnum="1" colwidth="1in" colname="Arch Choice"/>
      <colspec colnum="2" colwidth="1in" colname="Arch Choice"/>
      <colspec colnum="3" colwidth="1in" colname="Arch Choice"/>
      <colspec colnum="4" colwidth="1in" colname="Arch Choice"/>

      <tbody>
        <row>
          <entry>armv2</entry>
          <entry>armv2a</entry>
          <entry>armv3</entry>
          <entry>armv3m</entry>
        </row>
        <row>
          <entry>armv4</entry>
          <entry>armv4t</entry>
          <entry>armv5</entry>
          <entry>armv5t</entry>
        </row>
        <row>
          <entry>armv5te</entry>
          <entry>armv6</entry>
          <entry>armv6j</entry>
          <entry>armv6t2</entry>
        </row>
        <row>
          <entry>armv6z</entry>
          <entry>armv6zk</entry>
          <entry>armv6-m</entry>
          <entry>armv7</entry>
        </row>
        <row>
          <entry>armv7-a</entry>
          <entry>armv7-r</entry>
          <entry>armv7-m</entry>
          <entry>iwmmxt</entry>
        </row>
        <row>
          <entry>iwmmxt2</entry>
          <entry>ep9312</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table os="j">
    <title>ARM Hard Floating Point Versions</title>
    <?dbfo table-width="4in" ?>

    <tgroup cols="2">

      <colspec colnum="1" colwidth="1in" colname="FPU Choice"/>
      <colspec colnum="2" colwidth="1in" colname="FPU Choice"/>
      <colspec colnum="3" colwidth="1in" colname="FPU Choice"/>
      <colspec colnum="4" colwidth="1in" colname="FPU Choice"/>

      <tbody>
        <row>
          <entry>fpa</entry>
          <entry>fpe2</entry>
          <entry>fpe3</entry>
          <entry>maverick</entry>
        </row>
        <row>
          <entry>vfp</entry>
          <entry>vfpv3</entry>
          <entry>vfpv3-fp16</entry>
          <entry>vfpv3-d16</entry>
        </row>
        <row>
          <entry>vfpv3-d16-fp16</entry>
          <entry>vfpv3xd</entry>
          <entry>vfpv3xd-fp16</entry>
          <entry>neon</entry>
        </row>
        <row>
          <entry>neon-fp16</entry>
          <entry>vfpv4</entry>
          <entry>vfpv4-d16</entry>
          <entry>fpv4-sp-d16</entry>
        </row>
        <row>
          <entry>neon-vfpv4</entry>
          <entry>softvfp</entry>
          <entry>none</entry>
        </row>
      </tbody>
    </tgroup>
  </table>
</sect2>
<sect2 role="target">
<title> Set Target </title>

<para os="a">During the building of the cross-compile tools, you will need to
  set a few variables that will be dependent on your particular needs.
  You will need to select the target triplet for the target architecture, the CPU
  endianess, the CPU architecture, the CPU mode, the CPU floating point hardware
  availability, and (if available) the type of floating point hardware. If you 
  do not know what values can be chosen for each of these, you can use the 
  tables at the bottom of this page as a reference.</para>

  <para os="a1">Most ARM processors are little endian, it is a safe choice.
  If your processor is an ARM9, good choices include: triplet of
  armv5l-unknown-linux-uclibeabi, ARM arch of armv5t, float of softfp, and fpu
  of either none or softvfp. ARM9 processors do not always have hardware
  floating point abilities. If your processor is a Cortex-A8 or Cortex-A9, good
  choices include: triplet of armv7a-unknown-linux-uclibceabi, ARM arch of
  armv7-a, float of hard, and fpu of vfpv3-d16.</para>
<para os="c">Now we will set the architecture and endianess of the CPU based
  on the target triplet provided above:</para>
  <para os="a2">The target triplet is a smart name that is used during the compilation 
  of binutils to set certain options (e.g. endianness). The following table 
  gives examples:</para>
  
   <table os="i">
    <title>Example Processor Type, ABI, and  Target Triplets</title>
    <?dbfo table-width="7in" ?>

    <tgroup cols="2">

      <colspec colnum="1" colwidth="2.5in" colname="Processor"/>
      <colspec colnum="2" colwidth="1in" colname="Endianess"/>
      <colspec colnum="3" colwidth="1in" colname="ABI"/>
      <colspec colnum="4" colwidth="2.5in" colname="Triplet"/>

      <thead>
        <row>
          <entry>Processor</entry>
          <entry>Endianess</entry>
          <entry>ABI</entry>
          <entry>Target Triplet</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>Generic arm</entry>
          <entry>little</entry>
          <entry>OABI</entry>
          <entry>arm-unknown-linux-uclibc</entry>
        </row>
        <row>
          <entry>Generic arm, version 4</entry>
          <entry>little</entry>
          <entry>OABI</entry>
          <entry>armv4-unknown-linux-uclibc</entry>
        </row>
        <row>
          <entry>Generic arm, version 5</entry>
          <entry>little</entry>
          <entry>EABI</entry>
          <entry>armv5l-unknown-linux-uclibceabi</entry>
        </row>
        <row>
          <entry>Generic arm, version 5</entry>
          <entry>big</entry>
          <entry>EABI</entry>
          <entry>armv5b-unknown-linux-uclibceabi</entry>
        </row>
        <row>
          <entry>Generic arm</entry>
          <entry>little</entry>
          <entry>EABI</entry>
          <entry>arm-unknown-linux-uclibceabi</entry>
        </row>
        <row>
          <entry>Generic arm, version 7-a </entry>
          <entry>little</entry>
          <entry>EABI</entry>
          <entry>armv7a-unknown-linux-uclibceabi</entry>
        </row>
      </tbody>

    </tgroup>

  </table>

  
  
  
<screen os="b"><userinput>
export CLFS_TARGET=&clfs_target;
echo export CLFS_TARGET=\""${CLFS_TARGET}\"" &gt;&gt; ~/.bashrc
</userinput></screen>
</sect2>
</sect1>
