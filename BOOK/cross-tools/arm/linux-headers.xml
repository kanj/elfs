<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
 <!ENTITY clfs_arch "arm">
<!ENTITY kernel_config "arch/arm/configs/versatile_defconfig"> 
]>

<sect1 id="ch-cross-tools-linux-headers" role="wrap">

  <?dbhtml filename="linux-headers.html"?>

  <title>Linux-Headers-&linux-version;</title>

  <indexterm zone="ch-cross-tools-linux-headers">
    <primary sortas="a-Linux-Headers">Linux-Headers</primary>
  </indexterm>

  <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
  href="../common/linux-headers.xml"
  xpointer="xpointer(//*[@role='package'])"/>

<sect2 role="Platform">
<title>Platform</title>

<para>This is the first section requiring knowledge of the target platform. For this 
book we will be using the VersatilePB development board 
(  http://www.arm.com/products/tools/development-boards/versatile/index.php ).
The primary information we need at thsi time is the architecture arm for this
platform. Using yes "" in front of make forces the make statement to use default
values. This is an easy trick for hitting return repeatedly. </para>

<screen ><userinput>
cp &kernel_config; ~/myConfig

CLFS_ARCH=&clfs_arch;
echo export  CLFS_ARCH=&clfs_arch; >> ~/.bashrc

</userinput></screen>

</sect2>

  
 <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
  href="../common/linux-headers.xml"
  xpointer="xpointer(//*[@role='installation'])"/>
  
  
<xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
  href="../common/linux-headers.xml"
  xpointer="xpointer(//*[@role='oldconfig'])"/>

  <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
  href="../common/linux-headers.xml"
  xpointer="xpointer(//*[@role='content'])"/>



  
</sect1>


