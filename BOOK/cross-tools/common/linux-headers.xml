<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
   %general-entities;
 ]>

<sect1 id="ch-cross-tools-linux-headers" role="wrap">
  <?dbhtml filename="linux-headers.html"?>

  <title>Linux-Headers-&linux-version;</title>

  <indexterm zone="ch-cross-tools-linux-headers">
    <primary sortas="a-Linux-Headers">Linux-Headers</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction</title>

    
<para> The Linux Kernel contains a make target that installs <quote>sanitized</quote> kernel headers. The Linux Kernel is itself a C program consisting of a number of separate source files. Header files are separate files used to keep variable definitions consistent between multiple source files. These header files are also required during the compilation of cros-compiler toolchain. We will need to know which architecture we are developing for to install the proper header files. To determine this we need what platform we are developing for.</para>

<para>The Linux Kernel uses a config file to determine which of the source files to compile into the final kernel or modules. The kernel source contains a number of configurations. Or in some cases the Linux Support Package for the platform will contain a custom source file with a configuration. This config file is in part determined by the platform and additionally by the users choice of features to enable or disable. Typically the config file is incomplete and requires additional process to make suitable for compiling a kernel. In this chapeter will shall do four things: identify the platform, determine the architecture, install the appropriate headers, and make the config file for the platform. </para>

	

</sect2>

<sect2 role="Platform">
<title>Set Platform </title>
<para> Replace this section in actual </para>
</sect2>

<sect2 role="Architecture">
<title>Set Architecture </title>

<screen os="c"><userinput>

CLFS_ARCH=&clfs_arch;
echo export  CLFS_ARCH=&clfs_arch; >> ~/.bashrc

</userinput></screen>
</sect2>

  <sect2 role="installation">
    <title>Installation of Linux Headers</title>

    <para os="a">For this step you will need the kernel tarball.</para>

    <para os="b">Install the header files that are common to all Platforms with this architecture:</para>

<screen os="c"><userinput>
make mrproper
make ARCH=${CLFS_ARCH} headers_check
make ARCH=${CLFS_ARCH} INSTALL_HDR_PATH=dest headers_install
cp -rv dest/include/* ${CLFS}/usr/include
</userinput></screen>



  </sect2>
  
  
<sect2 role="oldconfig" >
<title> Make Config </title>
<screen os="e"><userinput>

cp &kernel_config; .config

yes "" | make ARCH=${CLFS_ARCH} oldconfig

cp .config ${CLFS}/boot/config-&linux-version;

</userinput></screen>
</sect2>

  <sect2 id="contents-linux-headers" role="content">
    <title>Contents of Linux-Headers</title>

    <segmentedlist>
      <segtitle>Installed headers</segtitle>

      <seglistitem>
        <seg>/usr/include/{asm,asm-generic,drm,linux,mtd,rdma,scsi,sound,video,xen}/*.h</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="linux-headers">
        <term><filename
        class="headerfile">/usr/include/{asm,asm-generic,drm,linux,mtd,rdma,scsi,sound,video,xen}/*.h</filename></term>
        <listitem>
          <para>The Linux API headers</para>
          <indexterm zone="ch-cross-tools-linux-headers linux-headers">
            <primary
            sortas="e-/usr/include/{asm,linux}/*.h">/usr/include/{asm,linux}/*.h</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
