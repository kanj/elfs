<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="ch-bootable-kernel" role="wrap">
  <?dbhtml filename="kernel.html"?>

  <title>Linux-&linux-version;</title>

  <indexterm zone="ch-bootable-kernel">
    <primary sortas="a-Linux">Linux</primary>
  </indexterm>

   <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
  href="../common/kernel.xml"
  xpointer="xpointer(//*[@role='package'])"/>

  <sect2 role="installation">
    <title>Installation of the kernel</title>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
   href="../common/kernel.xml"
   xpointer="xpointer(//*[@os='a'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
   href="../common/kernel.xml"
   xpointer="xpointer(//*[@os='b'])"/>

  <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
   href="../common/kernel.xml"
   xpointer="xpointer(//*[@os='c'])"/>

    <para os="d">This ensures that the kernel tree is absolutely clean. The
    kernel team recommends that this command be issued prior to each
    kernel compilation. Do not rely on the source tree being clean after
    un-tarring.</para>

    <para os="e">Configure the kernel via a menu-driven interface.
    Please note that the udev bootscript requires "rtc" and "tmpfs" to be
    enabled and built into the kernel, not as modules. BLFS has
    some information regarding particular kernel configuration requirements of
    packages outside of CLFS at <ulink
    url="&blfs-root;view/svn/longindex.html#kernel-config-index"/>:</para>

    <note os="f"><para>Since we are building for an embedded system we need to make sure
    our key components are built into the kernel and not as modules. Our key
    components are console/video, disk, and network. With out these built in our
    system will not function properly. If your concerned about disk space, your kernel
    should be without modules.</para></note>

    <screen os="g"><userinput>
    cp ~/x86_myconfig .config
    make ARCH=${CLFS_ARCH} CROSS_COMPILE=${CLFS_TARGET}- oldconfig</userinput></screen>

    <para os="h">Alternatively, <command>make menuconfig</command> may be more
    appropriate in some situations. See the <filename>README</filename>
    file for more information.</para>


 <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
   href="../common/kernel.xml"
   xpointer="xpointer(//*[@os='i'])"/>

    

    <para os="j">Compile the kernel image and modules:</para>

<screen os="k"><userinput>make ARCH=${CLFS_ARCH} CROSS_COMPILE=${CLFS_TARGET}- bzImage modules</userinput></screen>



<xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
   href="../common/kernel.xml"
   xpointer="xpointer(//*[@os='l'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
   href="../common/kernel.xml"
   xpointer="xpointer(//*[@os='m'])"/>

   

<screen os="n"><literal>alias char-major-XXX some-module</literal></screen>
 <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
   href="../common/kernel.xml"
   xpointer="xpointer(//*[@os='o'])"/>
    

    <para os="p">Install the modules, if the kernel configuration uses
    them:</para>

<screen os="q"><userinput>make ARCH=${CLFS_ARCH} CROSS_COMPILE=${CLFS_TARGET}- \
    INSTALL_MOD_PATH=${CLFS} modules_install</userinput></screen>

    <para os="r">After kernel compilation is complete, additional steps are
    required to complete the installation. Some files need to be copied to
    the <filename class="directory">${CLFS}/boot</filename> directory.</para>

    <para os="s">Issue the following command to install the kernel:</para>

<screen os="t"><userinput>cp arch/x86/boot/bzImage ${CLFS}/boot/clfskernel-&linux-version;</userinput></screen>

    <para os="u"><filename>System.map</filename> is a symbol file for the kernel.
    It maps the function entry points of every function in the kernel API,
    as well as the addresses of the kernel data structures for the running
    kernel. Issue the following command to install the map file:</para>

<screen os="v"><userinput>cp System.map ${CLFS}/boot/System.map-&linux-version;</userinput></screen>

    <para os="w">If we compiled our kernel with modules and we made sure
    <command>depmod.pl</command> is avaiable from BusyBox, we need to create the
    module dependency list by issuing the following command:</para>

<screen os="x"><userinput>${CLFS}/cross-tools/bin/depmod.pl -F ${CLFS}/boot/System.map-&linux-version; \
    -b ${CLFS}/lib/modules/&linux-version;</userinput></screen>

    <para os="y">The kernel configuration file <filename>.config</filename>
    produced by the <command>make menuconfig</command> step above contains
    all the configuration selections for the kernel that was just compiled.
    It is a good idea to keep this file for future reference:</para>

<screen os="z"><userinput>cp .config ${CLFS}/boot/config-&linux-version;</userinput></screen>

    <warning os="aa">
      <para>Some kernel documentation recommends creating a symlink from
      <filename class="symlink">/usr/src/linux</filename> pointing to the
      kernel source directory. This is specific to kernels prior to the
      2.6 series and <emphasis>must not</emphasis> be created on an CLFS
      system as it can cause problems for packages you may wish to build
      once your base CLFS system is complete.</para>

    </warning>

   <para os="ab">The bootloaders section contains more information on
    how to configure the kernel for specifc bootloaders. Please refer
    to this section for your specific needs.</para>

  </sect2>

  <sect2 id="contents-kernel" role="content">
    <title>Contents of Linux</title>

    <segmentedlist>
      <segtitle>Installed files</segtitle>

      <seglistitem>
        <seg>config-[linux-version], clfskernel-[linux-version],
        and System.map-[linux-version]</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="config">
        <term><filename>config-[linux-version]</filename></term>
        <listitem>
          <para>Contains all the configuration selections for the kernel</para>
          <indexterm zone="ch-bootable-kernel config">
            <primary sortas="e-/boot/config">/boot/config-[linux-version]</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="clfskernel">
        <term><filename>clfskernel-[linux-version]</filename></term>
        <listitem>
          <para>The engine of the Linux system. When turning on the
          computer, the kernel is the first part of the operating system
          that gets loaded. It detects and initializes all components of
          the computer's hardware, then makes these components available
          as a tree of files to the software and turns a single CPU into
          a multitasking machine capable of running scores of programs
          seemingly at the same time.</para>
          <indexterm zone="ch-bootable-kernel clfskernel">
            <primary sortas="b-clfskernel">clfskernel-[linux-version]</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="System.map">
        <term><filename>System.map-[linux-version]</filename></term>
        <listitem>
          <para>A list of addresses and symbols; it maps the entry points
          and addresses of all the functions and data structures in the
          kernel</para>
          <indexterm zone="ch-bootable-kernel System.map">
            <primary sortas="e-/boot/System.map">/boot/System.map-[linux-version]</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
